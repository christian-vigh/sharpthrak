/**************************************************************************************************************

    NAME
        WinAPI/Structures/SOUNDSENTRY.cs

    DESCRIPTION
        HIGHCONTRAST structure, used with the SPI_GETSOUNDSENTRY/SPI_SETSOUNDSENTRY actions of the
	SystemParametersInfo() function.

    AUTHOR
        Christian Vigh, 08/2012, based on pInvoke.net.

    HISTORY
    [Version : 1.0]    [Date : 2012/08/18]     [Author : CV]
        Initial version.

 **************************************************************************************************************/

using	System ;
using	System. Runtime. InteropServices ;
using   System.Windows.Forms ;

using   Thrak. WinAPI. Enums ;


namespace Thrak. WinAPI. Structures
   {
	/// <summary>
	/// Contains information about the SoundSentry accessibility feature.
	/// <para>
	/// When the SoundSentry feature is on, the computer displays a visual indication only when a sound is generated.
	/// </para>
	/// </summary>
	/// <remarks>
	/// Windows 95/98: The visual indication is displayed when a sound is generated through the computer's internal speaker.
	/// <para>
	/// Windows NT/2000: The visual indication is displayed when a sound is generated through either the multimedia sound services or through the computer's speaker.
	/// </para>
	/// <br/>
	/// An application uses a SOUNDSENTRY structure when calling the SystemParametersInfo function with the uiAction parameter set to SPI_GETSOUNDSENTRY or SPI_SETSOUNDSENTRY. 
	/// <para>
	/// When using SPI_GETSOUNDSENTRY, an application must specify the cbSize member of the SOUNDSENTRY structure; the SystemParametersInfo function fills the remaining members. 
	/// </para>
	/// <para>
	/// An application must specify the cbSize, dwFlags, and iWindowsEffect members when using the SPI_SETSOUNDSENTRY value.
	/// </para>
 	/// </remarks>
	[StructLayout ( LayoutKind. Sequential )]
	public struct SOUNDSENTRY
	   {
		/// <summary>
		/// Specifies the size, in bytes, of this structure.
		/// </summary>
		public  UInt32			cbSize ;

		/// <summary>
		/// A set of bit flags that specify properties of the SoundSentry feature. 
		/// </summary>
		public  SSF_Constants		dwFlags ;

		/// <summary>
		/// Windows 95/98: Specifies the visual signal to present when a text-mode application generates a sound while running in a full-screen virtual machine.
		/// </summary>
		public  SSTF_Constants		iFSTextEffect ;

		/// <summary>
		/// Windows 95/98: Specifies the duration, in milliseconds, of the visual signal that is displayed when a full-screen, text-mode application generates a sound.
		/// <para>
		/// Windows NT/2000: This member is reserved for future use. It must be set to zero.
		/// </para>
		/// </summary>
		public  UInt32			iFSTextEffectMSec ;

		/// <summary>
		/// Windows 95/98: Specifies the RGB value of the color to be used when displaying the visual signal shown when a full-screen, text-mode application generates a sound.
		/// <para>
		/// Windows NT/2000: This member is reserved for future use. It must be set to zero.
		/// </para>
		/// </summary>
		public  UInt32			iFSTextEffectColorBits ;

		/// <summary>
		/// Windows 95/98: Specifies the visual signal to present when a graphics-mode application generates a sound while running in a full-screen virtual machine.
		/// </summary>
		public  SSGF_Constants		iFSGrafEffect ;

		/// <summary>
		/// Windows 95/98: Specifies the duration, in milliseconds, of the visual signal that is displayed when a full-screen, graphics-mode application generates a sound.
		/// <para>
		/// Windows NT/2000: This member is reserved for future use. It must be set to zero.
		/// </para>
		/// </summary>
		public  UInt32			iFSGrafEffectMSec ;

		/// <summary>
		/// Windows 95/98: Specifies the RGB value of the color to be used when displaying the visual signal shown when a full-screen, graphics-mode application 
		/// generates a sound.
		/// <para>
		/// Windows NT/2000: This member is reserved for future use. It must be set to zero.
		/// </para>
		/// </summary>
		public  UInt32			iFSGrafEffectColor ;

		/// <summary>
		/// Specifies the visual signal to display when a sound is generated by a Windows-based application or an MS-DOS application running in a window.
		/// </summary>
		public  SSWF_Constants		iWindowsEffect ;

		/// <summary>
		/// Windows 95/98: Specifies the duration, in milliseconds, of the visual signal that is displayed when a Win32-based application 
		/// (or an application running in a window) generates a sound.
		/// <para>
		/// Windows NT/2000: This member is reserved for future use. It must be set to zero.
		/// </para>
		/// </summary>
		public  UInt32			iWindowsEffectMSec ;

		/// <summary>
		/// This member is reserved for future use. It should be set to NULL.
		/// </summary>
		private IntPtr			__lpszWindowsEffectDLL ;

		/// <summary>
		/// This member is reserved for future use. It must be set to zero.
		/// </summary>
		public  UInt32			iWindowsEffectOrdinal ;


		/// <summary>
		/// This member is reserved for future use. It should be set to NULL.
		/// </summary>
		public String  lpszWindowsEffectDLL 
		   {
			get { return ( Marshal. PtrToStringAnsi ( __lpszWindowsEffectDLL ) ) ; }
			set { __lpszWindowsEffectDLL  =  Marshal. StringToHGlobalAnsi ( value ) ; }
		    }


		/// <summary>
		/// Converts a WinAPI.Structure object into an initialized SOUNDSENTRY structure. This is only syntactical sugar to zero out a structure
		/// using the Structure.Empty property.
		/// </summary>
		/// <returns>An initialized SOUNDSENTRY structure.</returns>
		public static implicit operator  SOUNDSENTRY ( Thrak. WinAPI. Structures. Structure  value )
		   {
			SOUNDSENTRY		Result ;

			Result. cbSize			=  Macros. GETSTRUCTSIZE ( typeof ( SOUNDSENTRY ) ) ;
			Result. dwFlags			=  SSF_Constants. SSF_NONE ;
			Result. __lpszWindowsEffectDLL	=  IntPtr. Zero ;
			Result. iFSGrafEffect		=  SSGF_Constants. SSGF_NONE ;
			Result. iFSGrafEffectColor	=  0 ;
			Result. iFSGrafEffectMSec	=  0 ;
			Result. iFSTextEffect		=  SSTF_Constants. SSTF_NONE ;
			Result. iFSTextEffectColorBits	=  0 ;
			Result. iFSTextEffectMSec	=  0 ;
			Result. iWindowsEffect		=  SSWF_Constants. SSWF_NONE ;
			Result. iWindowsEffectMSec	=  0 ;
			Result. iWindowsEffectOrdinal	=  0 ;

			return ( Result ) ;
		    }
	    }
    }
