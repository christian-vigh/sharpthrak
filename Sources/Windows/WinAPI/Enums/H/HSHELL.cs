/**************************************************************************************************************

    NAME
        WinAPI/Constants/H/HSHELL.cs

    DESCRIPTION
        Shell hook codes.

    AUTHOR
        Christian Vigh, 08/2012.

    HISTORY
    [Version : 1.0]    [Date : 2012/08/29]     [Author : CV]
        Initial version.

 **************************************************************************************************************/


using	System  ;
using	System. Runtime. InteropServices  ;

using   Thrak. WinAPI. WAPI ;


namespace Thrak. WinAPI. Constants
   {
	# region HSHELL_ constants
	/// <summary>
	/// Shell hook codes.
	/// </summary>
	public enum HSHELL_Constants : int
	   {
		/// <summary>
		/// Zero value.
		/// </summary>
		HSHELL_NONE			=  0,

		/// <summary>
		/// The accessibility state has changed. 
		/// </summary>
		HSHELL_ACCESSIBILITYSTATE	=  11,

		/// <summary>
		/// The shell should activate its main window.
		/// </summary>
		HSHELL_ACTIVATESHELLWINDOW	=  3,

		/// <summary>
		/// The user completed an input event (for example, pressed an application command button on the mouse or an application command key on the keyboard), 
		/// and the application did not handle the WM_APPCOMMAND message generated by that input. 
		/// <para>
		/// If the Shell procedure handles the WM_COMMAND message, it should not call CallNextHookEx. See the Return Value section for more information.
		/// </para>
		/// </summary>
		HSHELL_APPCOMMAND		=  12,

		/// <summary>
		/// Owner task is terminating, the window needs to be closed.
		/// </summary>
		HSHELL_ENDTASK			=  10,

		/// <summary>
		/// The window needs to be flashed.
		/// </summary>
		HSHELL_FLASH			=  HSHELL_REDRAW | HSHELL_HIGHBIT,

		/// <summary>
		/// A window is being minimized or maximized. The system needs the coordinates of the minimized rectangle for the window. 
		/// </summary>
		HSHELL_GETMINRECT		=  5,

		/// <summary>
		/// Keyboard language was changed or a new keyboard layout was loaded.
		/// </summary>
		HSHELL_LANGUAGE			=  8,

		/// <summary>
		/// The title of a window in the task bar has been redrawn. 
		/// </summary>
		HSHELL_REDRAW			=  6,

		/// <summary>
		/// A full-screen window has been activated.
		/// </summary>
		HSHELL_RUDEAPPACTIVATED		=  HSHELL_WINDOWACTIVATED | HSHELL_HIGHBIT,

		/// <summary>
		/// Notifies when some window's system menu is brought up by right clicking its taskbar button. Gives window handle.
		/// </summary>
		HSHELL_SYSMENU			=  9,

		/// <summary>
		/// The user has selected the task list. A shell application that provides a task list should return TRUE to prevent Windows from starting its task list.
		/// </summary>
		HSHELL_TASKMAN			=  7,

		/// <summary>
		/// The activation has changed to a different top-level, unowned window. 
		/// </summary>
		HSHELL_WINDOWACTIVATED		=  4,

		/// <summary>
		/// A top-level, unowned window has been created. The window exists when the system calls this hook.
		/// </summary>
		HSHELL_WINDOWCREATED		=  1,

		/// <summary>
		/// A top-level, unowned window is about to be destroyed. The window still exists when the system calls this hook.
		/// </summary>
		HSHELL_WINDOWDESTROYED		=  2,

		/// <summary>
		/// A top-level window has been replaced. The window exists when the system calls this hook. 
		/// </summary>
		HSHELL_WINDOWREPLACED		=  13,

		/// <summary>
		/// A top-level window is being replaced.
		/// </summary>
		HSHELL_WINDOWREPLACING		=  14,

		/// <summary>
		/// Bit to be set for certain operations such as HSHELL_FLASH or HSHELL_RUDEAPPACTIVATED.
		/// </summary>
		HSHELL_HIGHBIT			=  0x8000

	    }
	# endregion
    }